// Generated by CoffeeScript 1.3.3
var WishListEditor, enable_logging, header, home_page, initUserInfo, init_choose_city, list_page, magSns, plan_view, search_page, set_cookie, user, user_places_page, user_view, wishList;

_.mixin({
  sum: function(list) {
    return _.reduce(list, (function(memo, num) {
      return memo + num;
    }), 0);
  },
  groupOneBy: function(list, iterator) {
    var id2arr, id2obj;
    id2arr = _.groupBy(list, iterator);
    id2obj = {};
    _.each(_.keys(id2arr), function(id) {
      return id2obj[id] = id2arr[id][0];
    });
    return id2obj;
  }
});

enable_logging = function(enabled) {
  if (typeof window.console === "undefined") {
    return window.console = {
      log: function() {},
      error: function() {}
    };
  } else if (!(enabled && (window.console.log != null) && (window.console.error != null))) {
    return window.console.log = window.console.error = function() {};
  }
};

initUserInfo = function(user) {
  var $infoContainer, $loginContainer, $ui, avatar, img_host, url;
  $ui = void 0;
  avatar = void 0;
  img_host = $("#img_host").val();
  avatar = img_host + "/travelavatar/" + user.userId + "/" + user.avatar + ".jpg!50";
  url = "/user/" + user.userId;
  $infoContainer = $("div.user_switch");
  $loginContainer = $("div.dologin");
  $(".user>img", $infoContainer).attr("src", "" + avatar).attr("alt", "" + user.nickName).attr("title", user.nickName).next().text(user.nickName).parent().attr("href", url + "/planlist");
  $(".user", $infoContainer).attr("href", url);
  $(".road", $infoContainer).attr("href", url + "/planlist");
  $(".want", $infoContainer).attr("href", url + "/want");
  $(".got", $infoContainer).attr("href", url + "/gone");
  $("div.user_switch").show();
  $("div.wl_switch").css('visibility', 'visible');
  $("div.head_wrapper li.btn_plan button").show();
  return $("div.login").hide();
};

magSns = {
  init: function($links) {
    if (typeof $links === "undefined") {
      return;
    }
    return $links.each(function() {
      return this.onclick = function() {
        if (window.location.href.match('return=')) {
          return user_view.openSnsSigninWindow("" + this.href);
        } else {
          return user_view.openSnsSigninWindow("" + this.href + "&return=" + (encodeURIComponent(window.location.href)));
        }
      };
    });
  }
};

user = {
  userId: null,
  nickName: null,
  avatar: null,
  sessionId: null
};

user_view = {
  openSnsSigninWindow: function(url) {
    window.open(url, "_blank", "width=615,height=505,left=" + ($(window).width() / 4) + "px,top=100px");
    return false;
  },
  showSigninBox: function() {
    return $.colorbox({
      initialWidth: 440,
      initialHeight: 180,
      overlayClose: false,
      fixed: true,
      opacity: 0.5,
      scrolling: false,
      href: '/user/signinbox'
    });
  },
  checkSignedIn: function() {
    if ($.cookie('uid')) {
      return true;
    } else {
      this.showSigninBox();
      return false;
    }
  }
};

wishList = function(obj, type, appendFunc) {
  this.jq = $(obj);
  this.type = type;
  if (typeof appendFunc === "function") {
    this.appendFunc = appendFunc;
  } else {
    this.appendFunc = function() {};
  }
};

wishList.prototype.commit = function() {
  var afterPostFunc, o, url;
  if (!user_view.checkSignedIn()) {
    return;
  }
  url = null;
  afterPostFunc = null;
  o = this;
  if (this.type === "want") {
    if (this.jq.hasClass("want_ed")) {
      afterPostFunc = function() {
        return o.jq.removeClass("want_ed");
      };
      url = "/api/want/cancle";
    } else {
      afterPostFunc = function() {
        return o.jq.addClass("want_ed");
      };
      url = "/api/want/add";
    }
  } else {
    if (o.jq.hasClass("got_ed")) {
      afterPostFunc = function() {
        return o.jq.removeClass("got_ed");
      };
      url = "/api/gone/cancle";
    } else {
      afterPostFunc = function() {
        return o.jq.addClass("got_ed");
      };
      url = "/api/gone/add";
    }
  }
  return $.post(url, {
    scenic_id: this.jq.data("id"),
    comment: ""
  }, (function(data) {
    if (data.state !== undefined && data.state) {
      afterPostFunc();
      return o.appendFunc(data);
    }
  }), "json");
};

list_page = {
  select_place_type: function() {
    var city_id, place_type;
    place_type = $.cookie('place_type');
    if (place_type === 'restaurant') {
      $('div.restaurantList').show();
    }
    city_id = $('#city_cid').val();
    if (place_type) {
      $('.w750').load("/cities/" + city_id + "/places_html/" + place_type + "?page=1&target_id=0");
      $('.select_point ul.menu li').removeClass('sel');
      switch (place_type) {
        case 'attraction':
          return $('a.sight').parent().addClass('sel');
        case 'hotel':
          return $('a.hotel').parent().addClass('sel');
        case 'restaurant':
          return $('a.restaurant').parent().addClass('sel');
      }
    }
  },
  init: function() {
    var me;
    me = this;
    $('#container').masonry({
      itemSelector: 'dd.point'
    });
    $('body').on('click', '.select_point ul.menu li', function() {
      var place_type;
      $('.select_point ul.menu li').removeClass('sel');
      $(this).addClass('sel');
      place_type = $(this).find('input').val();
      me.load_places(place_type, 1);
      return $.cookie('place_type', place_type);
    }).on('click', 'div.slide_container li', function() {
      var place_type, target_id;
      $('div.slide_container').removeClass('sel');
      $(this).addClass('sel');
      place_type = $('.select_point ul.menu li.sel').find('input').val();
      target_id = $(this).find('input').val();
      set_cookie('target_id', target_id);
      return me.load_places(place_type, 1, target_id);
    });
    $('body').on('click', '.page_container ul.page li', function() {
      var default_page, max_page, page, place_type, target_id;
      default_page = parseInt($('div.page_container li.sel a').text());
      max_page = parseInt($('#page_total').val());
      page = (function() {
        switch ($(this).attr('class')) {
          case 'prev':
            return Math.max(1, default_page - 1);
          case 'next':
            return Math.min(max_page, default_page + 1);
          case 'begin':
            return 1;
          case 'end':
            return max_page;
          default:
            return parseInt($(this).find('a').text());
        }
      }).call(this);
      place_type = $('.select_point ul.menu li.sel').find('input').val();
      target_id = $.cookie('target_id');
      target_id || (target_id = 0);
      return me.load_places(place_type, page, target_id);
    });
    $("div.main").on("click", "button.want", function(event) {
      var o, w;
      event.preventDefault();
      o = this;
      w = new wishList(this, "want", function(data) {
        return $(o).parents(".bg").find(".use b").text(data.num);
      });
      return w.commit();
    });
    $("div.main").on("click", "button.got", function(event) {
      var o, w;
      event.preventDefault();
      o = this;
      w = new wishList(this, "gone", function(data) {
        return $(o).parents(".bg").find(".view b").text(data.num);
      });
      return w.commit();
    });
    if (window.location.hash) {
      return $('#js-trip').css('z-index', 9999999);
    }
  },
  load_places: function(place_type, page, target_id) {
    var city_id, url;
    page = Math.max(1, page);
    city_id = $('#city_cid').val();
    if (target_id) {
      target_id = "&target_id=" + target_id;
    }
    target_id || (target_id = '');
    url = "/cities/" + city_id + "/places_html/" + place_type + "?page=" + page + target_id;
    $('div.places').load(url, function() {
      return wleditor.update_add_wishplace_buttons();
    });
    switch (place_type) {
      case 'attraction':
        return $('div.restaurantList').hide();
      case 'hotel':
        return $('div.restaurantList').hide();
      case 'restaurant':
        return $('div.restaurantList').show();
    }
  }
};

set_cookie = function($a, $b) {
  if ($b !== '') {
    return $.cookie($a, $b, {
      path: '/',
      domain: 'in1001.com'
    });
  }
};

home_page = {
  init: function() {
    var me;
    me = this;
    this.init_gallery();
    this.init_choose_city();
    this.init_cover();
    $('.chooseCity_popup a').click(function() {
      var $cwrapper, $input, callback, city, from_city;
      from_city = $(this).text();
      $cwrapper = $(this).parents('.choose-city');
      $input = $('input', $cwrapper);
      city = $(this).text();
      $input.val(city);
      $cwrapper.removeClass('open');
      set_cookie('from_city', from_city);
      set_cookie('to_city', null);
      callback = function() {
        var price_min;
        me.load_places('result');
        me.load_places('main');
        price_min = $('li.result b').text() + "元";
        return $('li.price').text(price_min);
      };
      return me.load_places('filter', null, callback);
    });
    $('body').on('click', 'li.result a', function() {
      var to_city;
      $('li.result a').removeClass('sel');
      $(this).addClass('sel');
      to_city = $(this).text();
      set_cookie('to_city', to_city);
      return me.load_places('main');
    }).on('click', '.page_container ul.page li', function() {
      var default_page, max_page, page;
      default_page = parseInt($('#list_page').val());
      max_page = parseInt($('#page_total').val());
      if ($(this).attr('class') === 'prev') {
        if (default_page > 1) {
          page = default_page - 1;
        } else {
          page = default_page;
        }
      } else if ($(this).attr('class') === 'next') {
        if (default_page < max_page) {
          page = default_page + 1;
        } else {
          page = default_page;
        }
      } else if ($(this).attr('class') === 'begin') {
        page = 1;
      } else if ($(this).attr('class') === 'end') {
        page = max_page;
      } else {
        page = $(this).find('a').text().replace(/(^\s*)|(\s*$)/g, "");
      }
      $('#list_page').val(page);
      return me.load_places('main', page);
    });
    return $.Placeholder.init();
  },
  init_gallery: function() {
    return $(".choose").backstretch(["/sta/images/header_bg/1.jpg", "/sta/images/header_bg/2.jpg", "/sta/images/header_bg/3.jpg", "/sta/images/header_bg/4.jpg"], {
      fade: 3000,
      duration: 4000
    });
  },
  init_choose_city: function() {
    var $choosecw;
    $choosecw = $("div.choose-city");
    $(".target_btn", $choosecw).click(function(event) {
      var $cwrapper;
      $cwrapper = $(this).parents(".choose-city");
      $cwrapper.toggleClass("open");
      return false;
    });
    return $(document).click(function(e) {
      if ($(e.target).parent(".chooseCity_popup").size() === 0) {
        return $("div.choose-city").removeClass("open");
      }
    });
  },
  init_cover: function() {
    return $("body").on("mouseover", "div.bg a", function() {
      return $(this).find(".description").show();
    }).on("mouseout", "div.bg a", function() {
      return $(this).find(".description").hide();
    });
  },
  load_places: function(position, page, callback) {
    var from_city, me, to_city, to_price, url;
    if (page == null) {
      page = 1;
    }
    me = this;
    from_city = $('div.choose-city input').val();
    to_city = $.cookie('to_city');
    to_city || (to_city = '');
    to_price = parseInt($('.price').text().replace('元', ''));
    set_cookie('to_price', to_price);
    set_cookie('from_city', from_city);
    url = "/pagehome/attractions_by_price?from_city=" + (encodeURIComponent(from_city)) + "&to_city=" + (encodeURIComponent(to_city)) + "&from_price=0&to_price=" + to_price;
    if (position === 'filter') {
      set_cookie('to_price', null);
      if (callback) {
        return $('ul.filter').load("" + url + "&view_type=lib_filter", callback);
      } else {
        return $('ul.filter').load("" + url + "&view_type=lib_filter");
      }
    } else if (position === 'result') {
      if (callback) {
        return $('li.result').load("" + url + "&view_type=lib_result", callback);
      } else {
        return $('li.result').load("" + url + "&view_type=lib_result");
      }
    } else if (position === 'main') {
      if (callback) {
        return $('div.main').load("" + url + "&page=" + page, callback);
      } else {
        return $('div.main').load("" + url + "&page=" + page);
      }
    }
  }
};

init_choose_city = function($choosecw) {
  $choosecw || ($choosecw = $('div.choose-city'));
  $('.target_btn', $choosecw).click(function() {
    var $change_div_left, $cwrapper, $document_width;
    $document_width = $(document).width();
    $change_div_left = function(left) {
      return $('div.rightBox div.chooseCity_popup').attr('style', 'left:' + left + 'px');
    };
    if ($document_width < 2550) {
      $change_div_left(-216);
    } else {
      $change_div_left(0);
    }
    $cwrapper = $(this).parents('.choose-city');
    return $cwrapper.toggleClass('open');
  });
  $(".input_target", $choosecw).focusin(function() {
    if ($(this).val() === $(this).attr('placeholder')) {
      return $(this).val("");
    }
  }).focusout(function() {
    if ($(this).val() === "") {
      return $(this).val($(this).attr('placeholder'));
    }
  });
  return $('.chooseCity_popup a', $choosecw).click(function() {
    var $cwrapper, $input, city, from_city;
    $cwrapper = $(this).parents('.choose-city');
    if ($cwrapper.hasClass('from_city')) {
      from_city = $(this).text();
      set_cookie('from_city', from_city);
      set_cookie('to_city', null);
      if ($('body').attr('id') === 'places') {
        location.reload();
      }
    }
    $input = $('input', $cwrapper);
    city = $(this).text();
    $input.val(city).change();
    return $cwrapper.removeClass('open');
  });
};

plan_view = {
  init: function() {
    boxAuto(".box", "");
    $(".header_review").backstretch("/sta/images/temp/gallery/1.jpg");
    return $(".bg img, .bg .info, .description").hover((function() {
      return $(this).parent().find(".description").show();
    }), function() {
      return $(this).parent().find(".description").hide();
    });
  },
  save_plan: function() {
    var plan_id, title;
    plan_id = $('#plan_id').val();
    title = $('#diglogBox .saveRoadDialog input.roadname').val();
    return $.ajax({
      url: "/api/plans/" + plan_id,
      type: 'PUT',
      data: $.toJSON({
        title: title,
        is_temp: 0
      }),
      dataType: 'json',
      contentType: 'application/json',
      processData: false,
      success: function(plan) {
        return window.location = "/user/" + plan.author.id + "/planlist";
      }
    });
  }
};

search_page = {
  init: function() {
    $('body').on('hover', '.bg a', function(e) {
      if (e.type === 'mouseenter') {
        return $(this).find(".description").show();
      } else if (e.type === 'mouseleave') {
        return $(this).find(".description").hide();
      }
    });
    return $(".wrapper_left").height($(".w850").outerHeight(true) - parseInt($(".wrapper_left").css("padding-top").substring(0, $(".wrapper_left").css("padding-top").lastIndexOf('px'))));
  },
  list_page: function() {
    return $('body').on('click', '.page_container ul.page li', function() {
      var default_page, keyword, max_page, page, placetype, uri;
      default_page = parseInt($('#list_page').val());
      max_page = parseInt($('#page_total').val());
      if ($(this).attr('class') === 'prev') {
        if (default_page > 1) {
          page = default_page - 1;
        } else {
          page = default_page;
        }
      } else if ($(this).attr('class') === 'next') {
        if (default_page < max_page) {
          page = default_page + 1;
        } else {
          page = default_page;
        }
      } else if ($(this).attr('class') === 'begin') {
        page = 1;
      } else if ($(this).attr('class') === 'end') {
        page = max_page;
      } else {
        page = $(this).find('a').text().replace(/(^\s*)|(\s*$)/g, "");
      }
      $('#list_page').val(page);
      keyword = $('div.main div.title span').text();
      placetype = $('div.main ul.wrapper_left li.sel a').attr('class').replace(' sel', '');
      uri = '/search/search_main?q=' + keyword + '&placetype=' + placetype + '&p=' + page;
      return $('div.w850').load(uri);
    });
  }
};

user_places_page = {
  init: function() {
    boxAuto(".nocontent", "");
    boxAuto(".sideBarBox", "");
    $(".bg a").hover((function() {
      return $(this).find(".description").show();
    }), function() {
      return $(this).find(".description").hide();
    });
    return $(".w1000").height($(".full").height() + 20);
  }
};

header = {
  init_search: function() {
    return $("li.search_bar").each(function() {
      var $q, default_val;
      default_val = "搜索景点、酒店、餐饮...";
      $q = $(this).find("input");
      $q.blur(function() {
        if (!this.value) {
          return this.value = default_val;
        }
      }).focus(function() {
        if (this.value === default_val) {
          return this.value = "";
        }
      });
      return $(this).submit(function() {
        var regexp;
        if ($q.val() === "" || $q.val() === default_val) {
          return false;
        }
        regexp = /[^a-zA-Z0-9-_\u4e00-\u9fa5]/g;
        if ($q.val().match(regexp)) {
          alert("请不要搜索特殊符号", "error");
          return false;
        }
        window.location.href = "/search?q=" + encodeURI($q.val());
        return false;
      });
    });
  },
  init: function() {
    this.init_search();
    $(".list a").hover(function() {
      return $(this).find("button").toggle();
    });
    $(".menu li:eq(1)").hover(function() {
      $(".target_explorer").toggle();
      return $(this).toggleClass("sel");
    });
    $(".wl_toggle").click(function() {
      $(".wl_popup").toggle();
      return $(this).parent().toggleClass("sel");
    });
    return $(".user_switch").hover(function() {
      $(".user_switch ul").toggle();
      return $(this).toggleClass("sel");
    });
  }
};

WishListEditor = (function() {
  var MiniWishListView, WishList, WishListView, WishPlace, WishPlaceView;
  WishPlace = Backbone.Model.extend({
    get_place: function() {
      var uid;
      uid = "" + (this.get('place_type')) + "_" + (this.get('place_id'));
      return wleditor.uid2place[uid];
    }
  });
  WishList = Backbone.Collection.extend({
    model: WishPlace,
    cities_wps: [],
    city_count: 0,
    place_count: 0,
    initialize: function() {
      return this.bind('add remove reset', this.classify_wps, this);
    },
    add_place: function(place, options) {
      var wp, _base, _name, _ref;
      wp = this.get(place.uid);
      if (!wp) {
        wp = new WishPlace({
          id: place.uid,
          place_type: place.type,
          place_id: place.id,
          uses_count: 0
        });
        if ((_ref = (_base = wleditor.uid2place)[_name = place.uid]) == null) {
          _base[_name] = place;
        }
        this.add(wp, options);
      }
      return wp;
    },
    classify_wps: function() {
      var cities_wps;
      console.log('re classify wish places', this.models);
      cities_wps = _.values(this.groupBy(function(wp) {
        return wp.get_place().city_id;
      }));
      console.log(cities_wps);
      this.cities_wps = _.map(cities_wps, function(city_wps) {
        return _.extend({
          city_id: city_wps[0].get_place().city_id,
          city_name: city_wps[0].get_place().city_name,
          count: city_wps.length,
          hotels: [],
          attractions: [],
          restaurants: []
        }, _.groupBy(city_wps, function(wp) {
          return wp.get('place_type') + 's';
        }));
      });
      this.city_count = this.cities_wps.length;
      this.place_count = _.sum(_.map(this.cities_wps, function(city_wps) {
        return city_wps.count;
      }));
      return console.log(this.cities_wps);
    },
    get_city_wish_places: function(city_id) {
      var city_wps;
      return city_wps = _.find(this.cities_wps, function(city) {
        return city.city_id === city_id;
      });
    },
    get_city_wish_places_by_type: function(city_id, place_type) {
      var city_wps;
      city_wps = _.find(this.cities_wps, function(city) {
        return city.city_id === city_id;
      });
      if (city_wps) {
        return city_wps["" + place_type + "s"];
      } else {
        return [];
      }
    },
    get_city_wps: function(city_id) {
      var wps;
      return wps = this.filter(function(wp) {
        return wp.get_place().city_id === city_id;
      });
    }
  });
  WishPlaceView = Backbone.View.extend({
    tagName: "li",
    className: 'ac normal wp',
    events: {
      "click span.remove": "deleteActivity"
    },
    initialize: function() {
      return this.template = _.template($("#activity-template").html());
    },
    deleteActivity: function() {
      var confirm_text, m;
      m = this.model;
      confirm_text = '真的要删除此地点？将删除所有关联的活动';
      return wleditor.confirm_box(this.$btn_remove, confirm_text, function() {
        wleditor.remove_wps([m]);
        return console.log("wp " + m.id + " and corresponding acs removed");
      });
    },
    render: function() {
      var ac;
      ac = this.model.toJSON();
      ac.place = this.model.get_place();
      ac.place.url = "/" + ac.place_type + "/" + ac.place.city_id + "/detail/" + ac.place_id;
      this.$el.addClass(ac.place_type);
      this.$el.attr('data-cid', this.model.cid);
      this.$el.html(this.template({
        activity: ac
      }));
      this.$btn_remove = this.$('span.remove');
      return this;
    }
  });
  MiniWishListView = Backbone.View.extend({
    el: '.wl_switch',
    initialize: function() {
      this.wishlist = this.model;
      this.$city_count = this.$('#city_count');
      this.$place_count = this.$('#place_count');
      return this.model.bind('reset add remove', this.render, this);
    },
    render: function() {
      console.log('mini wishlist view render');
      this.$city_count.text(this.wishlist.city_count);
      return this.$place_count.text(this.wishlist.place_count);
    }
  });
  WishListView = Backbone.View.extend({
    el: '.wl_popup',
    current_city_id: null,
    current_place_type: 'attraction',
    events: {
      'click ul.tab.city li': 'switch_city',
      'click ul.tab.type li': 'switch_type',
      'click ul.tab.city span.remove': 'delete_city',
      'click .tab-bar .btn_plan': 'to_editor_page'
    },
    initialize: function() {
      this.wishlist = this.model;
      this.$city_tab_template = _.template($('#wishlist-city-tab-template').html());
      this.$type_tab_template = _.template($('#wishlist-type-tab-template').html());
      this.$wps_container = this.$('.city-places ul.list');
      this.$city_tab = this.$('ul.tab.city');
      this.$type_tab = this.$('ul.tab.type');
      if (window.js_params) {
        this.current_city_id = js_params.city_id || $.cookie('wl_city_id');
        this.current_place_type = js_params.place_type || $.cookie('wl_place_type') || 'attraction';
      }
      $("body").delegate("button.remove, .box a.add", "click", function() {
        if (!user_view.checkSignedIn()) {
          return;
        }
        wleditor.wishlist_view.toggle_place($(this).data());
        return false;
      });
      return this.model.bind('reset add remove', this.render, this);
    },
    to_editor_page: function() {
      return window.location.href = "/plan/" + wleditor.id + "/edit";
    },
    toggle_place: function(place) {
      var wp;
      place.id = place.id + '';
      place.city_id = place.city_id + '';
      wp = wleditor.wishlist.get(place.uid);
      if (wp) {
        return wleditor.remove_wps([wp]);
      } else {
        return this.add_place(place);
      }
    },
    add_place: function(place) {
      this.current_city_id = place.city_id;
      this.current_place_type = place.type;
      return this.wishlist.add_place(place);
    },
    switch_city: function(ev) {
      this.current_city_id = $(ev.currentTarget).data('city_id') + '';
      $.cookie('wl_city_id', this.current_city_id);
      return this.render();
    },
    switch_type: function(ev) {
      this.current_place_type = $(ev.currentTarget).data('place_type');
      $.cookie('wl_place_type', this.current_place_type);
      return this.render();
    },
    delete_city: function(ev) {
      var $btn, city_id, city_name;
      $btn = $(ev.currentTarget);
      city_id = $btn.parent().data('city_id') + '';
      city_name = $btn.parent().data('city_name') + '';
      wleditor.confirm_box($btn, "删除" + city_name + "的所有景点和活动？", function() {
        var wps;
        wps = wleditor.wishlist.get_city_wps(city_id);
        return wleditor.remove_wps(wps);
      });
      return false;
    },
    render_summary: function() {
      var cities_stats, city_ids, city_wps, me, type2name, types_stats;
      me = this;
      type2name = {
        attraction: '景点',
        hotel: '酒店',
        restaurant: '餐饮'
      };
      city_ids = _.map(this.wishlist.cities_wps, function(city_wps) {
        return city_wps.city_id;
      });
      if (city_ids.length && !_.contains(city_ids, this.current_city_id)) {
        this.current_city_id = city_ids[0];
      }
      cities_stats = _.map(this.wishlist.cities_wps, function(city_wps) {
        var city_stat;
        return city_stat = {
          city_id: city_wps.city_id,
          city_name: city_wps.city_name,
          class_name: city_wps.city_id === me.current_city_id ? 'sel' : '',
          wp_count: city_wps.count
        };
      });
      city_wps = this.wishlist.get_city_wish_places(this.current_city_id) || {};
      types_stats = _.map(['attraction', 'hotel', 'restaurant'], function(place_type) {
        var _ref;
        return {
          place_type: place_type,
          place_type_name: type2name[place_type],
          class_name: place_type === me.current_place_type ? 'sel' : '',
          wp_count: ((_ref = city_wps["" + place_type + "s"]) != null ? _ref.length : void 0) || 0
        };
      });
      this.$city_tab.html(this.$city_tab_template({
        cities_stats: cities_stats
      }));
      return this.$type_tab.html(this.$type_tab_template({
        types_stats: types_stats
      }));
    },
    add_wp_view: function(wp) {
      var acv;
      acv = new WishPlaceView({
        model: wp,
        id: wp.cid
      });
      return this.$wps_container.append(acv.render().el);
    },
    render_wps: function() {
      var acs, me;
      me = this;
      acs = this.wishlist.get_city_wish_places_by_type(this.current_city_id, this.current_place_type);
      console.log("render wish places for city " + this.current_city_id + ", type " + this.current_place_type + ", count " + acs.length);
      this.$wps_container.empty();
      _.each(acs, function(ac) {
        return me.add_wp_view(ac);
      });
      this.$wps_container.width(acs.length * 150);
      return wleditor.update_add_wishplace_buttons();
    },
    render: function() {
      console.log('wishlist view render');
      this.render_summary();
      return this.render_wps();
    }
  });
  this._save_plan_detail = function() {
    var detail, url;
    url = "/api/plans/" + this.id;
    detail = {
      days: this.days,
      wish_places: this.wishlist.toJSON()
    };
    return wleditor.ajax_save("save plan detail, " + this.days.length + " days, " + detail.wish_places.length + " wps", {
      type: "PUT",
      url: url,
      data: JSON.stringify({
        detail: detail
      })
    });
  };
  this.ajax_save = function(op_name, ajax_opts) {
    var me, _ref;
    me = this;
    if ((_ref = ajax_opts.contentType) == null) {
      ajax_opts.contentType = 'application/json';
    }
    return $.ajax(ajax_opts).done(function() {
      return console.log("" + op_name + " done", ajax_opts);
    }).fail(function(err) {
      return console.error("Fail to " + op_name + ", " + err.status + " " + err.statusText + ": " + err.responseText);
    });
  };
  this.remove_wps = function(wps) {
    var acs_remove, aids, aidstr, me, place_uids, _done;
    me = this;
    place_uids = _.map(wps, function(wp) {
      return wp.id;
    });
    acs_remove = _.map(wps, function(wp) {
      var acs;
      acs = me.place_uid2acs[wp.id];
      if (acs) {
        delete me.place_uid2acs[wp.id];
      }
      return acs != null ? acs : [];
    });
    acs_remove = _.flatten(acs_remove);
    aids = _.map(acs_remove, function(ac) {
      return ac.id;
    });
    _done = function() {
      me.wishlist.remove(wps, {
        silent: true
      });
      _.each(me.days, function(day) {
        return day.aids = _.difference(day.aids, aids);
      });
      return me.wishlist.reset(me.wishlist.models);
    };
    if (aids.length) {
      aidstr = aids.join(',');
      return wleditor.ajax_save("batch remove " + aids.length + " acs for " + wps.length + " wps", {
        type: 'DELETE',
        url: "/api/plans/" + me.id + "/activities/" + aidstr + "?force=1"
      }).done(function() {
        return _done();
      });
    } else {
      console.log("remove " + wps.length + " wps with no acs");
      return _done();
    }
  };
  this.update_add_wishplace_buttons = function() {
    var added_count, me;
    me = this;
    added_count = 0;
    $('button.remove, .box a.add').each(function() {
      var place;
      place = $(this).data();
      if (me.wishlist.get(place.uid)) {
        $(this).addClass('remove_ed').text('移除清单');
        return added_count += 1;
      } else {
        return $(this).removeClass('remove_ed').text('加入清单');
      }
    });
    return console.log("" + added_count + " place in this page added to wishlist");
  };
  this.init = function() {
    var me;
    me = this;
    this.save_plan_detail = _.debounce(this._save_plan_detail, 200);
    this.userId = $.cookie('uid');
    this.uid2place = {};
    this.wishlist = new WishList;
    this.wishlist.bind('add remove reset', function() {
      return me.save_plan_detail();
    });
    this.wishlist_view = new WishListView({
      model: this.wishlist
    });
    this.mini_wishlist_view = new MiniWishListView({
      model: this.wishlist
    });
    return this.render_view();
  };
  this.set_plan = function(plan) {
    var acs;
    this.id = plan.id;
    this.name = plan.name;
    this.uid2place = _.groupOneBy(plan.places, 'uid');
    acs = _.map(plan.activities, function(ac) {
      ac.place_uid = "" + ac.place_type + "_" + ac.place_id;
      return ac;
    });
    this.place_uid2acs = _.groupBy(acs, 'place_uid');
    this.days = plan.detail.days;
    this.wishlist.reset(plan.detail.wish_places, {
      silent: true
    });
    this.wishlist.classify_wps();
    return this.render_view();
  };
  this.render_view = function() {
    this.wishlist_view.render();
    return this.mini_wishlist_view.render();
  };
  this.fetch = function() {
    var me;
    if (!this.userId) {
      return;
    }
    me = this;
    return $.get("/api/collections/", {
      user_id: this.userId,
      _: Math.random()
    }, (function(plan) {
      if (!plan.id) {
        return;
      }
      return me.set_plan(plan);
    }), "json");
  };
  this.confirm_box = function($btn, text, callback) {
    console.log(text);
    return callback();
  };
  return this;
});

$(function() {
  var avatar, body_id, nickName, sessionId, userId;
  enable_logging(true);
  userId = $.cookie("uid");
  nickName = $.cookie("nickname");
  avatar = $.cookie("avatar");
  sessionId = $.cookie("session_id");
  if (userId && nickName && avatar && sessionId) {
    user.userId = userId;
    user.nickName = nickName;
    user.avatar = avatar;
    user.sessionId = sessionId;
    initUserInfo(user);
  }
  magSns.init($("a.header-snslogin"));
  header.init();
  body_id = $('body').attr('id');
  switch (body_id) {
    case 'places':
      init_choose_city();
      list_page.init();
      list_page.select_place_type();
      break;
    case 'index':
      home_page.init();
      break;
    case 'plan-view':
      plan_view.init();
      break;
    case 'plan-editor':
      init_choose_city();
      break;
    case 'search':
      search_page.init();
      search_page.list_page();
      break;
    case 'user-places':
      user_places_page.init();
  }
  if (body_id !== 'plan-editor') {
    window.wleditor = new WishListEditor();
    wleditor.init();
    return wleditor.fetch();
  }
});
